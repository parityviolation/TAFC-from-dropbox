function [VarParam Param fnameParams] = getPsychStimParameters(fname,DAQFILEPATH, LOGFILEPATH)
% function [VarParam Param fnameParams] = getPsychStimParameters(fname,DAQFILEPATH, LOGFILEPATH)
%
% Will load containing saved parameters from PsychStimController associated with supplied DAQ file
% (generated by SaveParams function in PsychStimControl).
% If Param filename is not specified in the .mat file associated with the
% DAQ file, will find the Param file with the find the Param file MOST
% likely to be associated with the DAQ file based on the the "create file"
% time.
%
% Input
% fname - DAQ file name
% containing saved parameters from PsychStimController
% (generated by SaveParams function in PsychStimController)
%
% Outputs
%  VarParam (a struct of length 1 or 2 dependon on how many
% paramters varied)
%    VarParam(i).Values = vector values
%    VarParam(i).Name = string describing paramters that varies
%  Param.sDescAdditional
%            string that vary in size with information about the stimuli
%            features that did NOT vary
%         .StimDuration
%         .Baseline time after StimDuration when screen was grayed out
% BA110909
%

% TO DO Should probably impose a different limit on how far in the future
% and in the past the Params file should be from the daq file


bdebugParam = 0; % set to 1 to see if any errors in guessing the correct Param file exist (only works for files where _SFile exists)

sAPPENDEX = '_SFile';
ftemp = fullfile(DAQFILEPATH,[fname sAPPENDEX]);

if ~bdebugParam & ~isempty(dir([ftemp '.*']))
    load(ftemp);
    ind = findstr(params.sfilename,'\');
    % Replace with getFileName() function.
    %     if ind > 1
    if length(ind) > 1  % Check with Bass
        temp = params.sfilename(ind(end-1)+1:end);  % Get just datefolder and filename
    else
        temp = params.sfilename;
    end
    fnameParams = fullfile(LOGFILEPATH,temp);
else
    fnameParams = findCandidateParamFile(fname,DAQFILEPATH,LOGFILEPATH);
    
    if bdebugParam % debug
        try
            load(ftemp);
            truefname = fullfile(LOGFILEPATH,params.sfilename);
            if ~strcmp(fnameParams,truefname)
                error('WRONG Params file is closest in time!!\n Right file: %s',truefname);
            end
        catch % no SFile exists
        end
    end
    
end

load(fnameParams);

[VarParam Param] = help_interpetPsychStimParam(psychstimctrlparams);
end

function fnameParams  = findCandidateParamFile(sfilename,DAQFILEPATH,LOGFILEPATH)
% first check if _SFile exists

% find Param file with time stamp closest  with closes time (_SFile doesn't exit)

%   This approach has several problems
% 1 the Creation time of DAQ file is when start acq button is pushed, but
% the Params file from PsychSC is created when the Run is pushed
% - so the Params file with the nearest time to the Start could be the
% NEXT Run if Stim Controller were running for awhile before DAQ file
% started acquiring
% This is not an unlikely case In fact this could happen any time where you are acquiring files sequentiallyl.
% the time of the later files could be closer to the next rather than the
% previous Stimulus.
% At would be nice to avoid this by requiring that the PsychSC Param file
% was created before the DAQ file but that never happens, because DAQ is
% started first (and triggered by PsychSC)
%
% if one assumes that one never analyzes sequentila DAQ files without the
% first. then there will be no problem as long as the acq time is longer
% than the wait between Start and Run being pressed.
%
% There doesn't seem to be a good solution, so it seems best to just
% report when time different between files is large and make it easy to
% try Param file from the next best time
%


% get create time for DAQ data
if isempty(strfind(sfilename,'.'))
    sfilename = [sfilename '.daq'];
end
sdata = getFileTime(fullfile(DAQFILEPATH,sfilename));

% get two Param files that were modified
tempfiles = dirc(fullfile(LOGFILEPATH,datestr(sdata.Creation,1),'*.mat'),'ae','d');
tempfiles = tempfiles(cellfun(@length, tempfiles(:,1))==19,[2 3 4]); % take only files that are 19 characters long (to exclude non-param save files)
% sort Param files by time relative to daq file
temp = cellfun(@datenum,cellstr(tempfiles(:,3)))-datenum(sdata.Creation);
[junk ind] = sort(abs(temp));
sortedtempfiles = tempfiles(ind,:);

% get time in format that is easier to present in minutes and secs
temp2 = cell2mat(cellfun(@datevec,cellstr(tempfiles(:,3)),'UniformOutput',0))-repmat(sdata.Creation,size(tempfiles,1),1);

stemp = sprintf('DAQ files found:\n');
stemp = sprintf('%s*******************************\n\t%s\t%s',stemp,sfilename,datestr(sdata.Creation));
display(stemp)
stemp = sprintf('PsychStimController Param files found:\n');
for i = 1:min(2,size(sortedtempfiles,1))
    fnameParams = fullfile(LOGFILEPATH,datestr(sdata.Creation,1),sortedtempfiles{i,1});
    load(fnameParams);
    [VarParam Param] = help_interpetPsychStimParam(psychstimctrlparams);
    
    stemp = sprintf('%s\t%s\t%s\t\t%d:%d:%d',stemp,sortedtempfiles{i,1},sortedtempfiles{i,3},temp2(ind(i),4),temp2(ind(i),5),round(temp2(ind(i),6)));
    for j=1:length(VarParam)
        stemp = sprintf('%s\n\t\t %s %s',stemp, VarParam(j).Name, num2str(VarParam(j).Values,'%1.2g '));
    end
    stemp = sprintf('%s\n',stemp);
end
display(stemp)

stemp = sprintf(' PRESS: \n\t Return to ACKNOWLEDGE and use 1st guess\n\t 2 to use 2nd closest Param file\n');
if temp2(ind(1),5)> 0.5 % warning if daq and param files differ by more than a half min
    display('Watch out POSSIBLE mismatch between DAQ and PychStimControl parameters files because are far apart in time\n Can Try 2nd closest Param file')
end
% display(stemp)
% ui = char(getkeywait(5)); % wait 5 seconds or take default)
ui = num2str(input(stemp)); % wait 5 seconds or take default)

i =1;
if strcmp(ui,'2');
    i = 2
end
fnameParams = fullfile(LOGFILEPATH,datestr(sdata.Creation,1),sortedtempfiles{i,1});
end